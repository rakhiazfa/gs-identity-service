// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int         @id @default(autoincrement())
  name          String
  email         String      @unique
  password      String
  isActive      Boolean     @default(true)
  refreshToken  String?     @db.VarChar(325)
  roles         UserHasRoles[]
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @default(now())

  @@map("users")
}

model Role {
  id            Int       @id @default(autoincrement())
  name          String    @unique
  users         UserHasRoles[]
  permissions   RoleHasPermissions[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now())

  @@map("roles")
}

model Permission {
  id            Int       @id @default(autoincrement())
  name          String    @unique
  roles         RoleHasPermissions[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now())

  @@map("permissions")
}

model UserHasRoles {
  id            Int     @id @default(autoincrement())
  user          User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        Int
  role          Role    @relation(fields: [roleId], references: [id], onDelete: Cascade)
  roleId        Int

  @@map("user_has_roles")
}

model RoleHasPermissions {
  id            Int          @id @default(autoincrement())
  role          Role         @relation(fields: [roleId], references: [id], onDelete: Cascade)
  roleId        Int
  permission    Permission   @relation(fields: [permissionId], references: [id], onDelete: Cascade)
  permissionId  Int

  @@map("role_has_permissions")
}